// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zeiterfassung1;

namespace Zeiterfassung1.Migrations
{
    [DbContext(typeof(ZeiterfassungContext))]
    partial class ZeiterfassungContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Zeiterfassung1.Model.Activity", b =>
                {
                    b.Property<int>("ActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("ActivityID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Zeiterfassung1.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Zeiterfassung1.Model.EmployeeActivity", b =>
                {
                    b.Property<int>("EmployeeActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActivityID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.HasKey("EmployeeActivityID");

                    b.HasIndex("ActivityID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("EmployeeActivity");
                });

            modelBuilder.Entity("Zeiterfassung1.Model.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Startdate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Zeiterfassung1.Model.Activity", b =>
                {
                    b.HasOne("Zeiterfassung1.Model.Project", "Project")
                        .WithMany("Activities")
                        .HasForeignKey("ProjectID");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Zeiterfassung1.Model.EmployeeActivity", b =>
                {
                    b.HasOne("Zeiterfassung1.Model.Activity", "Activity")
                        .WithMany("EmployeeActivities")
                        .HasForeignKey("ActivityID");

                    b.HasOne("Zeiterfassung1.Model.Employee", "Employee")
                        .WithMany("EmployeeActivities")
                        .HasForeignKey("EmployeeID");

                    b.Navigation("Activity");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Zeiterfassung1.Model.Activity", b =>
                {
                    b.Navigation("EmployeeActivities");
                });

            modelBuilder.Entity("Zeiterfassung1.Model.Employee", b =>
                {
                    b.Navigation("EmployeeActivities");
                });

            modelBuilder.Entity("Zeiterfassung1.Model.Project", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
